name: Daily Scraping

on:
  schedule:
    - cron: '0 0 * * *'  # Run at midnight UTC daily
  workflow_dispatch:     # Allows manual triggering for testing

jobs:
  scrape:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'
          
      - name: Check environment
        run: |
          echo "Node version: $(node -v)"
          echo "NPM version: $(npm -v)"
          echo "Ubuntu version: $(lsb_release -a)"
          echo "Memory: $(free -h)"
          echo "Disk space: $(df -h)"
        continue-on-error: true
          
      - name: Install system dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y libgbm-dev libgtk-3-0 libasound2 libxss1 libnss3
        continue-on-error: true
          
      - name: Install dependencies
        run: |
          npm install
          npm list playwright
        continue-on-error: true
          
      - name: Install Playwright browsers
        run: npx playwright install chromium --with-deps
        continue-on-error: true
        
      - name: Verify browser installation
        run: |
          npx playwright -v
          echo "Chromium executable path:"
          node -e "console.log(require('playwright').chromium.executablePath())"
        continue-on-error: true
      
      - name: Ensure data directory exists
        run: mkdir -p data
        continue-on-error: true
      
      - name: Create test file to ensure artifacts exist
        run: echo "Debug log created at $(date)" > debug-log.txt
        continue-on-error: true
      
      - name: Create debug version of scraper
        run: |
          cat > debug-scraper.js << 'EOF'
          const { chromium } = require('playwright');
          
          async function debugScraper() {
            console.log('Starting debug scraper...');
            try {
              console.log('Launching browser...');
              const browser = await chromium.launch({ 
                headless: true,
                args: ['--no-sandbox', '--disable-setuid-sandbox']
              });
              
              console.log('Browser launched. Opening page...');
              const page = await browser.newPage();
              
              console.log('Navigating to a simple test page...');
              await page.goto('https://example.com');
              
              console.log('Page loaded. Getting page title...');
              const title = await page.title();
              console.log('Page title:', title);
              
              console.log('Taking screenshot...');
              await page.screenshot({ path: 'debug-screenshot.png' });
              
              console.log('Closing browser...');
              await browser.close();
              console.log('Debug scraper completed successfully!');
            } catch (error) {
              console.error('Debug scraper error details:', error);
              process.exit(1);
            }
          }
          
          debugScraper()
            .then(() => console.log('Debug completed'))
            .catch(error => {
              console.error('Failed:', error);
              process.exit(1);
            });
          EOF
        continue-on-error: true
          
      - name: Run simplified debug scraper
        run: node debug-scraper.js
        continue-on-error: true
      
      - name: Print detailed log output for debugging
        run: |
          ls -la
          echo "======================"
          echo "Debug log contents:"
          cat debug-log.txt || echo "No debug log found"
          echo "======================"
        continue-on-error: true
      
      - name: Run actual scraper with detailed error logging
        run: |
          echo "Running main scraper with more detailed logging..."
          CI=true NODE_DEBUG=playwright node scraper.js
        continue-on-error: true
      
      - name: Upload debug artifacts
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: debug-artifacts
          path: |
            *.png
            *.json
            *.html
            *.txt
            data/
            
      - name: Commit and push changes if successful
        if: success()
        run: |
          git config --global user.name 'GitHub Actions'
          git config --global user.email 'actions@github.com'
          git add data/
          git commit -m "Daily data update" || echo "No changes to commit"
          git push 