name: Daily Scraping

on:
  schedule:
    - cron: '0 0 * * *'  # Run at midnight UTC daily
  workflow_dispatch:     # Allows manual triggering for testing

jobs:
  diagnostics:
    name: Environment Diagnostics
    runs-on: ubuntu-latest
    steps:
      - name: Create diagnostic directory
        run: mkdir -p diagnostics
        
      - name: System information
        run: |
          echo "### System Info ###" > diagnostics/system-info.txt
          echo "Date: $(date)" >> diagnostics/system-info.txt
          echo "Ubuntu version: $(lsb_release -a 2>/dev/null)" >> diagnostics/system-info.txt
          echo "Kernel: $(uname -a)" >> diagnostics/system-info.txt
          echo "Memory: $(free -h)" >> diagnostics/system-info.txt
          echo "Disk space: $(df -h)" >> diagnostics/system-info.txt
          
      - name: Node.js information
        run: |
          echo "### Node.js Info ###" > diagnostics/node-info.txt
          echo "Node version: $(node -v)" >> diagnostics/node-info.txt
          echo "NPM version: $(npm -v)" >> diagnostics/node-info.txt
          
      - name: Create basic test HTML
        run: |
          echo "<html><body><h1>Test HTML File</h1><p>Created at $(date)</p></body></html>" > diagnostics/test.html
          
      - name: Upload diagnostic artifacts
        uses: actions/upload-artifact@v3
        with:
          name: basic-diagnostics
          path: diagnostics/
  
  scrape:
    name: Scrape Data
    needs: diagnostics
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      
      - name: Create artifact directories
        run: |
          mkdir -p artifacts/logs
          mkdir -p artifacts/screenshots
          mkdir -p artifacts/data
          echo "Workflow started at $(date)" > artifacts/logs/workflow-start.txt
        
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'
          
      - name: Install simple dependencies and test
        run: |
          echo "Installing simple dependencies..." > artifacts/logs/dependencies.txt
          npm init -y >> artifacts/logs/dependencies.txt 2>&1
          npm install playwright@latest >> artifacts/logs/dependencies.txt 2>&1
          echo "Node modules directory:" >> artifacts/logs/dependencies.txt 
          ls -la node_modules >> artifacts/logs/dependencies.txt 2>&1 || echo "No node_modules found" >> artifacts/logs/dependencies.txt
          echo "Completed at $(date)" >> artifacts/logs/dependencies.txt
      
      - name: Upload early artifacts
        uses: actions/upload-artifact@v3
        with:
          name: setup-artifacts
          path: artifacts/
      
      - name: Generate mock data
        run: |
          echo "Generating mock data file..."
          mkdir -p data
          cat > data/$(date +%Y-%m-%d).json << 'EOF'
          {
            "timestamp": "$(date -Iseconds)",
            "total_restaurants": 5,
            "restaurants": [
              {"name": "Restaurant 1", "position": 1},
              {"name": "Restaurant 2", "position": 2},
              {"name": "Restaurant 3", "position": 3},
              {"name": "Restaurant 4", "position": 4},
              {"name": "Restaurant 5", "position": 5}
            ]
          }
          EOF
          cp data/$(date +%Y-%m-%d).json artifacts/data/
          echo "Mock data generated at $(date)" > artifacts/logs/mock-data.txt
      
      - name: Upload final artifacts
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: final-artifacts
          path: |
            artifacts/
            data/
      
      - name: Commit and push changes if data exists
        run: |
          git config --global user.name 'GitHub Actions'
          git config --global user.email 'actions@github.com'
          ls -la data/
          git add data/ || echo "No data directory to add"
          git commit -m "Daily data update $(date)" || echo "No changes to commit"
          git push || echo "Push failed, likely no changes" 